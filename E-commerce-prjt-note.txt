


                            E Commerce Website - 

                        Front End : Using angular

        1. Create angular project - ng new project-name
        2. Run angular project - ng serve
        3. add bootstrap, font awsome , google fonts in index.js
        4. Lazy load the commonly used html pages inside a module
            ng g m products --route products --module app.module
        5. add router-outlet selector inside the route component html page
        6. Create component should lazy loaded in the products module
            all-products - ng g c products/all-products
            cart - ng g c products/cart
            wishlist - ng g c products/wish-list
            page-not-found - ng g c page-not-found
            header - ng g c header
            footer - ng g c footer
        7. set up path for each component
            - to redirect from localhost:4200 to specific route
        8. Design the component
        24. Create angular service 
        25. Import HttpClientModule in products module
        26. Dependecy inject HttpClient class in api service ts file
        27. call api in all products component
        28. Import productModule in AppModule


                            Mongo Db
        9. store all products details in mongodb as a data base 
        
        
                        Node and Express js
        
             Create back end using - Node and Express js

        10. create a folder for server
        11. create a package.json file, cmnd: npm init
        12. create index.js file
        13. Install express : npm i express
        14. Import express inside index.js file
        15. Using express create a serve application
        16. Set up port for server application
        17. Use json parser in server application
        18. Install cors protocol inside server: npm i cors
        19. Import cors in index.js
        20. Using cors specify origin to server app
        21. Install mongoose to establish connection between server and mongodb
            : npm i mongoose
        22. Using mongoose establish connection between server and mongodb
            - create service folder
            - create db.js file
            - Import mongoose in db.js file
            - Using mongoose define the connection string
            - Define Model to products 
            - Export model so that it can be used in another files
        23. Resolving API in index.js
